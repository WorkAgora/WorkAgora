service: work-agora-api
useDotenv: true

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-west-3'}
  logRetentionInDays: 1
  timeout: 15
  environment:
    SERVICE: ${self:service}
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    NO_COLOR: ${env:NO_COLOR, 'true'}
  apiGateway:
    shouldStartNameWithService: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: arn:aws:dynamodb:${self:provider.region}:*:*

# plugins:
#   - serverless-dynamodb-local
#   - serverless-offline
#   - serverless-dotenv-plugin

custom:
  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    seed: ${file(packages/api/resource/seed.yml)}
  # optimize:
  #   external: ['swagger-ui-dist']
  serverless-jetpack:
    mode: pnpm

resources:
  - ${file(packages/api/resource/dynamodb.yml)}
